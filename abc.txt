diff --git a/app/build.gradle b/app/build.gradle
index 96cc9e7..ebe487b 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -25,6 +25,13 @@ android {
         sourceCompatibility JavaVersion.VERSION_11
         targetCompatibility JavaVersion.VERSION_11
     }
+    buildFeatures {
+        viewBinding true
+    }
+    dependenciesInfo {
+        includeInApk true
+    }
+    buildToolsVersion '32.1.0-rc1'
     configurations.all {
         exclude group:"org.jmonkeyengine",module:"jme3-desktop"
     }
@@ -36,6 +43,8 @@ dependencies {
     implementation 'androidx.appcompat:appcompat:1.4.1'
     implementation 'com.google.android.material:material:1.6.0'
     implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
+    implementation 'androidx.navigation:navigation-fragment:2.3.5'
+    implementation 'androidx.navigation:navigation-ui:2.3.5'
     testImplementation 'junit:junit:'
     androidTestImplementation 'androidx.test.ext:junit:1.1.3'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
@@ -43,4 +52,5 @@ dependencies {
     implementation "org.jmonkeyengine:jme3-core:" + jmonkeyengineVersion
     implementation "org.jmonkeyengine:jme3-android-native:" + jmonkeyengineVersion
     implementation 'com.google.guava:guava:27.0.1-android'
+    implementation files("libs/jme-cardboard.jar")
 }
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 55c0f47..0318703 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -1,25 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
-    package="com.spatial.learning.jme.android">
+    package="com.spatial.learning.jme.android" >
 
     <application
         android:allowBackup="true"
+        android:extractNativeLibs="true"
         android:icon="@mipmap/ic_launcher"
-        android:label="@string/app_name"
+        android:label="my app"
         android:roundIcon="@mipmap/ic_launcher_round"
-        android:supportsRtl="true"
-        android:extractNativeLibs="true"
-        android:theme="@style/Theme.AppCompat.NoActionBar">
+        android:supportsRtl="true">
         <activity
-            android:name=".AndroidLauncher"
-            android:exported="true"
-            android:screenOrientation="landscape">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-        </activity>
+            android:name=".MainActivity"
+            android:exported="false" />
     </application>
 
-</manifest>
+</manifest>
\ No newline at end of file
diff --git a/app/src/main/java/com/spatial/learning/jme/android/MyFragment.java b/app/src/main/java/com/spatial/learning/jme/android/MyFragment.java
index 46ef22d..834b521 100644
--- a/app/src/main/java/com/spatial/learning/jme/android/MyFragment.java
+++ b/app/src/main/java/com/spatial/learning/jme/android/MyFragment.java
@@ -1,11 +1,16 @@
 package com.spatial.learning.jme.android;
 
+import android.os.Bundle;
+
+import com.jme3.app.AndroidHarnessFragment;
 import com.jme3.app.CardboardHarnessFragment;
 import com.spatial.learning.jme.game.SpatialLearningVWM;
 
 
-public class MyFragment extends CardboardHarnessFragment {
-    public MyFragment() {
-        appClass = SpatialLearningVWM.class.getCanonicalName();
+public class MyFragment extends AndroidHarnessFragment {
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.appClass = SpatialLearningVWM.class.getCanonicalName();
+        super.onCreate(savedInstanceState);
     }
 }
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
index 0b15a20..ee40b07 100644
--- a/app/src/main/res/layout/activity_main.xml
+++ b/app/src/main/res/layout/activity_main.xml
@@ -6,4 +6,13 @@
     android:layout_height="match_parent"
     tools:context=".MainActivity">
 
+    <androidx.fragment.app.FragmentContainerView
+        android:id="@+id/fragmentContainerView2"
+        android:name="com.spatial.learning.jme.android.MyFragment"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 9bde34f..3c89380 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -1,3 +1,12 @@
 <resources>
     <string name="app_name">AndroidModule</string>
+    <string name="title_activity_main">MainActivity</string>
+    <!-- Strings used for fragments for navigation -->
+    <string name="first_fragment_label">First Fragment</string>
+    <string name="second_fragment_label">Second Fragment</string>
+    <string name="next">Next</string>
+    <string name="previous">Previous</string>
+
+    <string name="hello_first_fragment">Hello first fragment</string>
+    <string name="hello_second_fragment">Hello second fragment. Arg: %1$s</string>
 </resources>
diff --git a/app/src/main/res/values/themes.xml b/app/src/main/res/values/themes.xml
index b3477d0..7347b63 100644
--- a/app/src/main/res/values/themes.xml
+++ b/app/src/main/res/values/themes.xml
@@ -13,4 +13,13 @@
         <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
         <!-- Customize your theme here. -->
     </style>
+
+    <style name="NoActionBar">
+        <item name="windowActionBar">false</item>
+        <item name="windowNoTitle">true</item>
+    </style>
+
+    <style name="AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />
+
+    <style name="PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />
 </resources>
diff --git a/desktop/build.gradle b/desktop/build.gradle
index 364285a..9fcfa65 100644
--- a/desktop/build.gradle
+++ b/desktop/build.gradle
@@ -3,7 +3,7 @@ plugins {
 }
 
 group 'com.spatial.learning.jme'
-version '1.0.0'
+version '2.0.0'
 mainClassName = 'com.spatial.learning.jme.desktopmodule.DesktopLauncher'
 String dependenciesString = ""
 
@@ -22,10 +22,10 @@ dependencies {
     implementation "org.jmonkeyengine:jme3-desktop:" + jmonkeyengineVersion
 }
 task copyJars(type: Copy) {
-    from (sourceSets.main.runtimeClasspath){
+    from(sourceSets.main.runtimeClasspath) {
         include '**/*.jar'
     }
-    from(sourceSets.main.compileClasspath){
+    from(sourceSets.main.compileClasspath) {
         include '**/*.jar'
     }
     into('build/libs/dependencies')
@@ -35,11 +35,11 @@ task copyJars(type: Copy) {
 /**
  * Better approach described below, but the 2 of them are vial ones
  */
-task createJar(type : Jar, dependsOn : copyJars){
+task createJar(type: Jar, dependsOn: copyJars) {
     //get the copied jars
     final String project = rootDir.getPath()
     final File dependencies = new File(project + "/desktop/build/libs/dependencies/")
-    if(dependencies.exists()) {
+    if (dependencies.exists()) {
         if (dependencies.listFiles().length > 0) {
             final File[] files = dependencies.listFiles()
             for (int i = 0; i < files.length; i++) {
@@ -50,11 +50,11 @@ task createJar(type : Jar, dependsOn : copyJars){
             }
         }
     }
-    manifest{
+    manifest {
         attributes('Main-Class': mainClassName)
         //pass the jars to the manifest
-        attributes('Class-Path' : dependenciesString)
-        attributes('Created-By' : 'Jme3-Gradle')
+        attributes('Class-Path': dependenciesString)
+        attributes('Created-By': 'Jme3-Gradle')
     }
     with jar
 }
@@ -64,7 +64,7 @@ task createJar(type : Jar, dependsOn : copyJars){
 task releaseJar(type: Jar, dependsOn: copyJars) {
     manifest {
         attributes("Main-Class": mainClassName,
-                "Class-Path": sourceSets.main.runtimeClasspath.filter {it.isFile() }.collect { "dependencies/${it.name}" }.join(' '))
+                "Class-Path": sourceSets.main.runtimeClasspath.filter { it.isFile() }.collect { "dependencies/${it.name}" }.join(' '))
     }
     //tag the jar task to inject this task into it
     with jar
diff --git a/game/src/main/java/com/spatial/learning/jme/game/ProjectManager.java b/game/src/main/java/com/spatial/learning/jme/game/ProjectManager.java
index f9b3005..1ecb1d8 100644
--- a/game/src/main/java/com/spatial/learning/jme/game/ProjectManager.java
+++ b/game/src/main/java/com/spatial/learning/jme/game/ProjectManager.java
@@ -22,6 +22,7 @@ public class ProjectManager {
             try {
                 if (!toRet.file.createNewFile()) {
                     toRet.init = false;
+                    System.out.println(pathName);
                     return toRet;
                 }
 
@@ -29,6 +30,7 @@ public class ProjectManager {
                 toRet.data.put("data", new HashMap<>());
                 toRet.data.get("data").put("name", projectName);
                 toRet.data.get("data").put("path", pathName);
+                System.out.println(toRet.data);
 
                 toRet.init = true;
 
@@ -122,29 +124,28 @@ public class ProjectManager {
 
     public String dataToString() {
         String toRet = "VWM/Virtual Water Maze Data File - 1.0.0\n";
-        toRet += "#" + this.data.get("data").get("name") + ";\n";
-        toRet += "#0;\n";
-        toRet += "#Home \"" + this.data.get("data").get("path") + "\";\n";
-        toRet += "#Constants\n#no_of_sessions " + this.data.get("data").get("sessions") + ";\n";
-        toRet += "#no_of_trials " + this.data.get("data").get("trials") + ";\n";
-        toRet += "#cue_format " + this.data.get("data").get("modelFormat") + ";\n";
-        toRet += "#arena " + this.data.get("data").get("arena") + ";\n";
-        toRet += "#arena_scale " + this.data.get("data").get("scale") + ";\n";
-        toRet += "#player_speed " + this.data.get("data").get("speed") + ";\n";
-        toRet += ";\n";
+        toRet += "#" + this.data.get("data").get("name") + "\n";
+        toRet += "#0\n";
+        toRet += "#Home \"" + this.data.get("data").get("path") + "\"\n";
+        toRet += "#Constants no_of_sessions " + this.data.get("data").get("sessions") + " ";
+        toRet += "no_of_trials " + this.data.get("data").get("trials") + " ";
+        toRet += "cue_format " + this.data.get("data").get("modelFormat") + " ";
+        toRet += "arena " + this.data.get("data").get("arena") + " ";
+        toRet += "arena_scale " + this.data.get("data").get("scale") + " ";
+        toRet += "player_speed " + this.data.get("data").get("speed") + " ";
+        toRet += "\n";
 
         toRet += "#Sessions\n";
         for (int i = 0, n = Integer.parseInt(this.data.get("data").get("sessions")); i < n; i++) {
             toRet += "#" + (i + 1) + "\n";
-            toRet += "\t#trials\n";
             for (int j = 0, m = Integer.parseInt(this.data.get("data").get("trials")); j < m; j++) {
                 toRet += "\t#" + (j + 1) + " " + data.get(String.valueOf(i)).get(String.valueOf(j));
                 for (int k = 0, o = this.cueMap.get(i).get(j).size(); k < o; k++) {
-                    toRet += "cue " + k + " " + this.cueMap.get(i).get(j).get(k) + " ";
+                    toRet += " cue " + k + " " + this.cueMap.get(i).get(j).get(k) + " ";
                 }
+                toRet += "\n";
             }
-            toRet += "\t;";
-            toRet += ";\n";
+            toRet += "\n";
         }
         toRet += ";\n";
 
